{"version":3,"sources":["img/logo.svg","Component/OptionTickets/OptionTikects.tsx","Component/TikectsList/TicketsList.tsx","api/api.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","OptionTickets","SearchOption","className","type","name","onChange","TicketsList","tickets","count","ticketsArray","map","item","DateHourIn","Math","round","segments","duration","DateMinutesIn","Number","toFixed","toString","slice","DateHourOut","DateMinutesOut","key","price","src","LogoSVG","alt","Date","date","getFullYear","getMonth","getDate","stops","length","join","UseTickets","fetch","then","response","json","data","searchId","catch","e","console","error","App","useState","ticketsPrev","ticketsStart","allTickets","setTicketsAll","useEffect","currentBox","currentTarget","currentBoxChecked","checked","prevState","log","filter","ticket","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4aa5fcd9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.66a91fa3.svg\";","import React from 'react'\r\nimport './OptionTikets.sass'\r\n\r\ntype PropsType = {\r\n    SearchOption: (e:React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\nexport const OptionTickets:React.FC<PropsType> = ({SearchOption}) => {\r\n    return (\r\n        <div className=\"optionTickets\">\r\n            <span className=\"block-name\">Количество пересадок</span>\r\n            <div className=\"option-item\">\r\n                <label>\r\n                    <input type=\"checkbox\"  name=\"allTransplants\" onChange={SearchOption}/>\r\n                    <span>Все</span>\r\n                </label>\r\n            </div>\r\n            <div className=\"option-item\">\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"withoutTransplants\" onChange={SearchOption}/>\r\n                    <span>Без пересадок</span>\r\n                </label>\r\n            </div>\r\n            <div className=\"option-item\">\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"oneTransplant\" onChange={SearchOption}/>\r\n                    <span>1 Пересадка</span>\r\n                </label>\r\n            </div>\r\n            <div className=\"option-item\">\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"twoTransplants\" onChange={SearchOption}/>\r\n                    <span>2 Пересадки</span>\r\n                </label>\r\n            </div>\r\n            <div className=\"option-item\">\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"threeTransplants\" onChange={SearchOption}/>\r\n                    <span>3 Пересадки</span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './TicketsList.sass'\r\nimport LogoSVG from './../../img/logo.svg'\r\nimport { TicketsType } from '../../App'\r\n\r\ntype PropsType = {\r\n    tickets: TicketsType[] | undefined\r\n}\r\n\r\nexport const TicketsList: React.FC<PropsType> = ({ tickets }) => {\r\n    let count = 0;\r\n    let ticketsArray = tickets?.map(item => {\r\n        let DateHourIn = Math.round(item.segments[0].duration / 3600)\r\n        let DateMinutesIn = Number((item.segments[0].duration / 3600).toFixed(2).toString().slice(2))\r\n\r\n        let DateHourOut = Math.round(item.segments[1].duration / 3600)\r\n        let DateMinutesOut = Number((item.segments[1].duration / 3600).toFixed(2).toString().slice(2))\r\n\r\n        return (\r\n            <div className=\"ticket-item\" key={count++}>\r\n                <div className=\"ticket-item_title\">\r\n                    <div className=\"ticket-item_price\">{item.price + ' P'}</div>\r\n                    <div className=\"ticket-item_logo\"><img src={LogoSVG} alt=\"\" /></div>\r\n                </div>\r\n                <div className=\"ticket-item_info\">\r\n                    <div className=\"ticket-item_inTime\">\r\n                        <div className=\"ticket-item_block\">\r\n                            <span className=\"ticket-item_block-title\">MOW – HKT</span>\r\n                            <span>{`${new Date(item.segments[0].date).getFullYear()}-${new Date(item.segments[0].date).getMonth()}-${new Date(item.segments[0].date).getDate()}`}</span>\r\n                        </div>\r\n                        <div className=\"ticket-item_block\">\r\n                            <span className=\"ticket-item_block-title\">В пути</span>\r\n                            <span>{`${DateHourIn}ч ${DateMinutesIn}м`}</span>\r\n                        </div>\r\n                        <div className=\"ticket-item_block\">\r\n                            <span className=\"ticket-item_block-title\">{item.segments[0].stops.length < 1 ? `${item.segments[0].stops.length} пересадок` : item.segments[0].stops.length > 1 ? `${item.segments[0].stops.length} пересадки` : `${item.segments[0].stops.length} пересадка`}</span>\r\n                            <span>{item.segments[0].stops.join(', ')}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ticket-item_outTime\">\r\n                        <div className=\"ticket-item_block\">\r\n                            <span className=\"ticket-item_block-title\">MOW – HKT</span>\r\n                            <span>{`${new Date(item.segments[1].date).getFullYear()}-${new Date(item.segments[1].date).getMonth()}-${new Date(item.segments[1].date).getDate()}`}</span>\r\n                        </div>\r\n                        <div className=\"ticket-item_block\">\r\n                            <span className=\"ticket-item_block-title\">В пути</span>\r\n                            <span>{`${DateHourOut}ч ${DateMinutesOut}м`}</span>\r\n                        </div>\r\n                        <div className=\"ticket-item_block\">\r\n                            <span className=\"ticket-item_block-title\">{item.segments[1].stops.length < 1 ? `${item.segments[1].stops.length} пересадок` : item.segments[1].stops.length > 1 ? `${item.segments[1].stops.length} пересадки` : `${item.segments[1].stops.length} пересадка`}</span>\r\n                            <span>{item.segments[1].stops.join(', ')}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"ticketsList\">\r\n            <div className=\"list-options\">\r\n                <div className=\"option-item\">\r\n                    <label>\r\n                        <input name=\"test\" type=\"radio\" className=\"option-input\" />\r\n                        <span>Самый быстрый</span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"option-item\">\r\n                    <label>\r\n                        <input name=\"test\" type=\"radio\" className=\"option-input\" />\r\n                        <span>Самый дешёвый</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            {ticketsArray}\r\n        </div>\r\n    )\r\n}","import { TicketsType } from \"../App\"\r\n\r\nexport type TicketType = {\r\n    carrier: string\r\n    price: number\r\n}\r\n\r\ntype UseTicketsType = {\r\n    stop: boolean\r\n    tickets: Array<TicketsType> | undefined\r\n}\r\n\r\n\r\nexport const UseTickets = {\r\n    getSearchId():Promise<UseTicketsType> {\r\n        return fetch('https://front-test.beta.aviasales.ru/search')\r\n            .then((response) => response.json())\r\n            .then(data => {\r\n                return fetch(`https://front-test.beta.aviasales.ru/tickets?searchId=${data.searchId}`)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(e => console.error(e))\r\n    },\r\n\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\nimport './App.sass';\nimport { OptionTickets } from './Component/OptionTickets/OptionTikects';\nimport { TicketsList } from './Component/TikectsList/TicketsList';\n\nimport { UseTickets } from './api/api';\n\ntype SegmentsType = {\n  // Код города (iata)\n  origin: string\n  // Код города (iata)\n  destination: string\n  // Дата и время вылета туда\n  date: string\n  // Массив кодов (iata) городов с пересадками\n  stops: string[]\n  // Общее время перелёта в минутах\n  duration: number\n}\n\nexport type TicketsType = {\n  // Цена в рублях\n  price: number\n  // Код авиакомпании (iata)\n  carrier: string\n  // Массив перелётов.\n  // В тестовом задании это всегда поиск \"туда-обратно\" значит состоит из двух элементов\n  segments: Array<SegmentsType>\n}\n\ntype StateType = {\n  tickets: Array<TicketsType> | undefined\n  ticketsPrev: Array<TicketsType> | undefined\n  ticketsStart: Array<TicketsType> | undefined\n}\n\nexport const App = () => {\n  let [allTickets, setTicketsAll] = useState<StateType | undefined>({ tickets: [], ticketsPrev: [], ticketsStart: [] })\n\n  useEffect(() => {\n    UseTickets.getSearchId().then(data => {\n      setTicketsAll({ tickets: data.tickets, ticketsPrev: data.tickets, ticketsStart: data.tickets })\n    })\n  }, [])\n\n\n  const SearchOption = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let currentBox = e.currentTarget\n    let currentBoxChecked = currentBox.checked\n    setTicketsAll((prevState) => {\n      console.log(allTickets?.tickets)\n      switch (currentBox.name) {\n        case 'withoutTransplants':\n          if (currentBoxChecked) {\n            return allTickets?.tickets === allTickets?.ticketsStart ?\n              {\n                tickets: [...allTickets?.ticketsStart?.filter(ticket => (ticket.segments[0].stops.length === 0) && (ticket.segments[1].stops.length === 0))],\n                ticketsPrev: allTickets?.tickets,\n                ticketsStart: allTickets?.ticketsStart\n              }\n              :\n              {\n                tickets: [...allTickets?.tickets, ...allTickets?.ticketsStart?.filter(ticket => (ticket.segments[0].stops.length === 0) && (ticket.segments[1].stops.length === 0))],\n                ticketsPrev: allTickets?.tickets, //2\n                ticketsStart: allTickets?.ticketsStart\n              }\n\n          } else {\n            return allTickets?.tickets === prevState?.ticketsPrev ?\n              {\n                tickets: allTickets?.ticketsStart,\n                ticketsPrev: allTickets?.ticketsPrev,\n                ticketsStart: allTickets?.ticketsStart\n\n              }\n              :\n              [...prevState?.tickets!.filter(ticket => (ticket.segments[0].stops.length !== 0) && (ticket.segments[1].stops.length !== 0))].length === 0 ?\n                {\n                  tickets: allTickets?.ticketsStart,\n                  ticketsPrev: allTickets?.tickets,\n                  ticketsStart: allTickets?.ticketsStart\n\n                }\n                :\n                {\n                  tickets: [...prevState?.tickets!.filter(ticket => (ticket.segments[0].stops.length !== 0) && (ticket.segments[1].stops.length !== 0))],\n                  ticketsPrev: allTickets?.tickets,\n                  ticketsStart: allTickets?.ticketsStart\n\n                }\n          }\n        case 'oneTransplant':\n          if (currentBoxChecked) {\n            return allTickets?.tickets === allTickets?.ticketsStart ?\n              {\n                tickets: [...allTickets?.ticketsStart?.filter(ticket => (ticket.segments[0].stops.length === 1) && (ticket.segments[1].stops.length === 1))],\n                ticketsPrev: allTickets?.tickets,\n                ticketsStart: allTickets?.ticketsStart\n              }\n              :\n              {\n                tickets: [...allTickets?.tickets, ...allTickets?.ticketsStart?.filter(ticket => (ticket.segments[0].stops.length === 1) && (ticket.segments[1].stops.length === 1))],\n                ticketsPrev: allTickets?.tickets,\n                ticketsStart: allTickets?.ticketsStart\n              }\n          } else {\n            return allTickets?.tickets === allTickets?.ticketsPrev ?\n              {\n                tickets: allTickets?.ticketsPrev,\n                ticketsPrev: allTickets?.ticketsPrev,\n                ticketsStart: allTickets?.ticketsStart\n\n              }\n              :\n              [...prevState?.tickets!.filter(ticket => (ticket.segments[0].stops.length !== 1) && (ticket.segments[1].stops.length !== 1))].length === 0 ?\n                {\n                  tickets: allTickets?.ticketsStart,\n                  ticketsPrev: allTickets?.tickets,\n                  ticketsStart: allTickets?.ticketsStart\n\n                }\n                :\n                {\n                  tickets: [...prevState?.tickets!.filter(ticket => (ticket.segments[0].stops.length !== 1) && (ticket.segments[1].stops.length !== 1))],\n                  ticketsPrev: allTickets?.tickets,\n                  ticketsStart: allTickets?.ticketsStart\n\n                }\n          }\n        case 'twoTransplants':\n          if (currentBoxChecked) {\n            return allTickets?.tickets === allTickets?.ticketsStart ?\n              {\n                tickets: [...allTickets?.ticketsStart?.filter(ticket => (ticket.segments[0].stops.length === 2) && (ticket.segments[1].stops.length === 2))],\n                ticketsPrev: allTickets?.tickets,\n                ticketsStart: allTickets?.ticketsStart\n              }\n              :\n              {\n                tickets: [...allTickets?.tickets, ...allTickets?.ticketsStart?.filter(ticket => (ticket.segments[0].stops.length === 2) && (ticket.segments[1].stops.length === 2))],\n                ticketsPrev: allTickets?.tickets,\n                ticketsStart: allTickets?.ticketsStart\n              }\n          } else {\n            return allTickets?.tickets === allTickets?.ticketsPrev ?\n              {\n                tickets: allTickets?.ticketsPrev,\n                ticketsPrev: allTickets?.ticketsPrev,\n                ticketsStart: allTickets?.ticketsStart\n\n              }\n              :\n              [...prevState?.tickets!.filter(ticket => (ticket.segments[0].stops.length !== 2) && (ticket.segments[1].stops.length !== 2))].length === 0 ?\n                {\n                  tickets: allTickets?.ticketsStart,\n                  ticketsPrev: allTickets?.tickets,\n                  ticketsStart: allTickets?.ticketsStart\n\n                }\n                :\n                {\n                  tickets: [...prevState?.tickets!.filter(ticket => (ticket.segments[0].stops.length !== 2) && (ticket.segments[1].stops.length !== 2))],\n                  ticketsPrev: allTickets?.tickets,\n                  ticketsStart: allTickets?.ticketsStart\n\n                }\n          }\n        case 'threeTransplants':\n          if (currentBoxChecked) {\n            return allTickets?.tickets === allTickets?.ticketsStart ?\n              {\n                tickets: [...allTickets?.ticketsStart?.filter(ticket => (ticket.segments[0].stops.length === 3) && (ticket.segments[1].stops.length === 3))],\n                ticketsPrev: allTickets?.tickets,\n                ticketsStart: allTickets?.ticketsStart\n              }\n              :\n              {\n                tickets: [...allTickets?.tickets, ...allTickets?.ticketsStart?.filter(ticket => (ticket.segments[0].stops.length === 3) && (ticket.segments[1].stops.length === 3))],\n                ticketsPrev: allTickets?.tickets,\n                ticketsStart: allTickets?.ticketsStart\n              }\n          } else {\n            return allTickets?.tickets === allTickets?.ticketsPrev ?\n              {\n                tickets: allTickets?.ticketsPrev,\n                ticketsPrev: allTickets?.ticketsPrev,\n                ticketsStart: allTickets?.ticketsStart\n\n              }\n              :\n              [...prevState?.tickets!.filter(ticket => (ticket.segments[0].stops.length !== 3) && (ticket.segments[1].stops.length !== 3))].length === 0 ?\n                {\n                  tickets: allTickets?.ticketsStart,\n                  ticketsPrev: allTickets?.tickets,\n                  ticketsStart: allTickets?.ticketsStart\n\n                }\n                :\n                {\n                  tickets: [...prevState?.tickets!.filter(ticket => (ticket.segments[0].stops.length !== 3) && (ticket.segments[1].stops.length !== 3))],\n                  ticketsPrev: allTickets?.tickets,\n                  ticketsStart: allTickets?.ticketsStart\n\n                }\n          }\n        case 'allTransplants':\n          if (currentBoxChecked) {\n            return (\n              {\n                tickets: allTickets?.ticketsStart,\n                ticketsPrev: allTickets?.tickets,\n                ticketsStart: allTickets?.ticketsStart\n              }\n            )\n          } else {\n            return allTickets?.tickets === allTickets?.ticketsPrev ?\n              {\n                tickets: allTickets?.ticketsPrev,\n                ticketsPrev: allTickets?.ticketsPrev,\n                ticketsStart: allTickets?.ticketsStart\n\n              }\n              :\n              {\n                tickets: allTickets?.tickets,\n                ticketsPrev: allTickets?.tickets,\n                ticketsStart: allTickets?.ticketsStart\n\n              }\n\n          }\n\n      }\n    })\n  }\n\n\n  if (!allTickets) return <div>Loading....</div>\n\n  return (\n    <div className=\"container app-wrap\">\n      <OptionTickets SearchOption={SearchOption} />\n      <TicketsList tickets={allTickets.tickets} />\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}