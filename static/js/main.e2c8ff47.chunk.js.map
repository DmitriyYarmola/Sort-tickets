{"version":3,"sources":["img/logo.svg","Component/OptionTickets/OptionTikects.tsx","Component/TikectsList/TicketsList.tsx","api/api.ts","Component/common/sorted.ts","Component/common/sortedList.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","OptionTickets","SearchOption","className","type","name","onChange","TicketsList","tickets","typeTickets","count","ticketsArray","map","item","DateHourIn","DateMinutesIn","DateHourOut","DateMinutesOut","mathRemainderOne","Number","segments","duration","toFixed","toString","slice","mathRemainderTwo","Math","ceil","round","key","price","src","LogoSVG","alt","Date","date","getFullYear","getMonth","getDate","stops","length","join","data-radio","UseTickets","fetch","then","response","json","data","searchId","catch","e","console","error","bubbleSortPrice","arr","sort","a","b","bubbleSortSpeed","sortedListTrue","allTickets","numberSort","prevState","ticketsStart","filter","ticket","ticketsPrev","sorted","changesStateOption","sortedListFalse","App","useState","setTicketsAll","useEffect","currentBox","currentTarget","currentBoxChecked","checked","dataset","radio","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e2c8ff47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.66a91fa3.svg\";","import React from 'react'\r\nimport './OptionTikets.sass'\r\n\r\ntype PropsType = {\r\n    SearchOption: (e:React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\nexport const OptionTickets:React.FC<PropsType> = ({SearchOption}) => {\r\n    return (\r\n        <div className=\"optionTickets\">\r\n            <span className=\"block-name\">Количество пересадок</span>\r\n            <div className=\"option-item\">\r\n                <label>\r\n                    <input type=\"checkbox\"  name=\"allTransplants\" onChange={SearchOption}/>\r\n                    <span>Все</span>\r\n                </label>\r\n            </div>\r\n            <div className=\"option-item\">\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"withoutTransplants\" onChange={SearchOption}/>\r\n                    <span>Без пересадок</span>\r\n                </label>\r\n            </div>\r\n            <div className=\"option-item\">\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"oneTransplant\" onChange={SearchOption}/>\r\n                    <span>1 Пересадка</span>\r\n                </label>\r\n            </div>\r\n            <div className=\"option-item\">\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"twoTransplants\" onChange={SearchOption}/>\r\n                    <span>2 Пересадки</span>\r\n                </label>\r\n            </div>\r\n            <div className=\"option-item\">\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"threeTransplants\" onChange={SearchOption}/>\r\n                    <span>3 Пересадки</span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './TicketsList.sass'\r\nimport LogoSVG from './../../img/logo.svg'\r\nimport { TicketsType } from '../../App'\r\n\r\ntype PropsType = {\r\n    tickets: TicketsType[] | undefined\r\n    typeTickets: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const TicketsList: React.FC<PropsType> = ({ tickets, typeTickets }) => {\r\n    let count = 0;\r\n    let ticketsArray = tickets?.map(item => {\r\n        let DateHourIn, DateMinutesIn, DateHourOut, DateMinutesOut\r\n        let mathRemainderOne = Number((item.segments[0].duration / 60).toFixed(2).toString().slice(3))\r\n        let mathRemainderTwo = Number((item.segments[1].duration / 60).toFixed(2).toString().slice(3))\r\n\r\n        if (mathRemainderOne > 60) {\r\n            DateHourIn = Math.ceil(item.segments[0].duration / 60)\r\n            DateMinutesIn = mathRemainderOne - 60\r\n        } else {\r\n            DateHourIn = Math.round(item.segments[0].duration / 60)\r\n            DateMinutesIn = Number((item.segments[0].duration / 60).toFixed(2).toString().slice(3))\r\n        }\r\n        if (mathRemainderTwo > 60) {\r\n            DateHourOut = Math.ceil(item.segments[1].duration / 60)\r\n            DateMinutesOut = mathRemainderTwo - 60\r\n        } else {\r\n            DateHourOut = Math.round(item.segments[1].duration / 60)\r\n            DateMinutesOut = Number((item.segments[1].duration / 60).toFixed(2).toString().slice(3))\r\n        }\r\n\r\n        return (\r\n            <div className=\"ticket-item\" key={count++}>\r\n                <div className=\"ticket-item_title\">\r\n                    <div className=\"ticket-item_price\">{item.price + ' P'}</div>\r\n                    <div className=\"ticket-item_logo\"><img src={LogoSVG} alt=\"\" /></div>\r\n                </div>\r\n                <div className=\"ticket-item_info\">\r\n                    <div className=\"ticket-item_inTime\">\r\n                        <div className=\"ticket-item_block\">\r\n                            <span className=\"ticket-item_block-title\">MOW – HKT</span>\r\n                            <span>{`${new Date(item.segments[0].date).getFullYear()}-${new Date(item.segments[0].date).getMonth()}-${new Date(item.segments[0].date).getDate()}`}</span>\r\n                        </div>\r\n                        <div className=\"ticket-item_block\">\r\n                            <span className=\"ticket-item_block-title\">В пути</span>\r\n                            <span>{`${DateHourIn}ч ${DateMinutesIn}м`}</span>\r\n                        </div>\r\n                        <div className=\"ticket-item_block\">\r\n                            <span className=\"ticket-item_block-title\">{item.segments[0].stops.length < 1 ? `${item.segments[0].stops.length} пересадок` : item.segments[0].stops.length > 1 ? `${item.segments[0].stops.length} пересадки` : `${item.segments[0].stops.length} пересадка`}</span>\r\n                            <span>{item.segments[0].stops.join(', ')}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ticket-item_outTime\">\r\n                        <div className=\"ticket-item_block\">\r\n                            <span className=\"ticket-item_block-title\">MOW – HKT</span>\r\n                            <span>{`${new Date(item.segments[1].date).getFullYear()}-${new Date(item.segments[1].date).getMonth()}-${new Date(item.segments[1].date).getDate()}`}</span>\r\n                        </div>\r\n                        <div className=\"ticket-item_block\">\r\n                            <span className=\"ticket-item_block-title\">В пути</span>\r\n                            <span>{`${DateHourOut}ч ${DateMinutesOut}м`}</span>\r\n                        </div>\r\n                        <div className=\"ticket-item_block\">\r\n                            <span className=\"ticket-item_block-title\">{item.segments[1].stops.length < 1 ? `${item.segments[1].stops.length} пересадок` : item.segments[1].stops.length > 1 ? `${item.segments[1].stops.length} пересадки` : `${item.segments[1].stops.length} пересадка`}</span>\r\n                            <span>{item.segments[1].stops.join(', ')}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"ticketsList\">\r\n            <div className=\"list-options\">\r\n                <div className=\"option-item\">\r\n                    <label>\r\n                        <input type=\"radio\" className=\"option-input overSpeed\" name=\"global_change\" data-radio=\"overSpeed\" onChange={typeTickets} />\r\n                        <span>Самый быстрый</span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"option-item\">\r\n                    <label>\r\n                        <input type=\"radio\" className=\"option-input chepest\" name=\"global_change\" data-radio=\"chepest\" onChange={typeTickets} />\r\n                        <span>Самый дешёвый</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            {ticketsArray}\r\n        </div>\r\n    )\r\n}","import { TicketsType } from \"../App\"\r\n\r\nexport type TicketType = {\r\n    carrier: string\r\n    price: number\r\n}\r\n\r\ntype UseTicketsType = {\r\n    stop: boolean\r\n    tickets: Array<TicketsType> | undefined\r\n}\r\n\r\n\r\nexport const UseTickets = {\r\n    getSearchId():Promise<UseTicketsType> {\r\n        return fetch('https://front-test.beta.aviasales.ru/search')\r\n            .then((response) => response.json())\r\n            .then(data => {\r\n                return fetch(`https://front-test.beta.aviasales.ru/tickets?searchId=${data.searchId}`)\r\n            })\r\n            .then(response => response.json())\r\n            .catch(e => console.error(e))\r\n    },\r\n\r\n}\r\n\r\n","import { TicketsType } from \"../../App\";\r\n\r\n\r\n\r\nexport const bubbleSortPrice = (arr: Array<TicketsType> | undefined) => {\r\n    let arrTickets = [...arr]\r\n    return arrTickets.sort((a,b) => a.price - b.price)\r\n};\r\n\r\nexport const bubbleSortSpeed = (arr: Array<TicketsType> | undefined) => {\r\n    let arrTickets = [...arr]\r\n    return arrTickets.sort((a,b) => (a.segments[0].duration - b.segments[0].duration))\r\n};","import { StateType } from './../../App';\r\n\r\n\r\ntype sortedListTrueType = (allTickets: StateType | undefined, numberSort: number, prevState: StateType | undefined) => StateType\r\n\r\nexport const sortedListTrue: sortedListTrueType = (allTickets, numberSort, prevState) => {\r\n    return allTickets?.tickets === allTickets?.ticketsStart ?\r\n        {\r\n            tickets: [...allTickets?.ticketsStart?.filter(ticket => (ticket.segments[0].stops.length === numberSort) && (ticket.segments[1].stops.length === numberSort))],\r\n            ticketsPrev: allTickets?.tickets,\r\n            ticketsStart: allTickets?.ticketsStart,\r\n            sorted: allTickets?.sorted,\r\n            changesStateOption: numberSort\r\n\r\n        }\r\n        :\r\n        (allTickets?.sorted && [...prevState?.tickets!.filter(ticket => (ticket.segments[0].stops.length === numberSort) && (ticket.segments[1].stops.length === numberSort))].length !== 0) ?\r\n            {\r\n                tickets: [...allTickets?.tickets?.filter(ticket => (ticket.segments[0].stops.length === numberSort) && (ticket.segments[1].stops.length === numberSort))],\r\n                ticketsPrev: allTickets?.tickets, //2\r\n                ticketsStart: allTickets?.ticketsStart,\r\n                sorted: allTickets?.sorted,\r\n                changesStateOption: numberSort\r\n            }\r\n            :\r\n            {\r\n                tickets: [...allTickets?.tickets, ...allTickets?.ticketsStart?.filter(ticket => (ticket.segments[0].stops.length === numberSort) && (ticket.segments[1].stops.length === numberSort))],\r\n                ticketsPrev: allTickets?.tickets, //2\r\n                ticketsStart: allTickets?.ticketsStart,\r\n                sorted: allTickets?.sorted,\r\n                changesStateOption: numberSort\r\n            }\r\n}\r\n\r\nexport const sortedListFalse: sortedListTrueType = (allTickets, numberSort, prevState) => {\r\n    return allTickets?.tickets === prevState?.ticketsPrev ?\r\n        {\r\n            tickets: allTickets?.ticketsStart,\r\n            ticketsPrev: allTickets?.ticketsPrev,\r\n            ticketsStart: allTickets?.ticketsStart,\r\n            sorted: allTickets?.sorted,\r\n            changesStateOption: numberSort\r\n        }\r\n        :\r\n        [...prevState?.tickets!.filter(ticket => (ticket.segments[0].stops.length !== numberSort) && (ticket.segments[1].stops.length !== numberSort))].length === 0 ?\r\n            {\r\n                tickets: allTickets?.ticketsStart,\r\n                ticketsPrev: allTickets?.tickets,\r\n                ticketsStart: allTickets?.ticketsStart,\r\n                sorted: allTickets?.sorted,\r\n                changesStateOption: numberSort\r\n            }\r\n            :\r\n            {\r\n                tickets: [...prevState?.tickets!.filter(ticket => (ticket.segments[0].stops.length !== numberSort) && (ticket.segments[1].stops.length !== numberSort))],\r\n                ticketsPrev: allTickets?.tickets,\r\n                ticketsStart: allTickets?.ticketsStart,\r\n                sorted: allTickets?.sorted,\r\n                changesStateOption: numberSort\r\n            }\r\n}","import React, { useEffect, useState } from 'react';\nimport './App.sass';\nimport { OptionTickets } from './Component/OptionTickets/OptionTikects';\nimport { TicketsList } from './Component/TikectsList/TicketsList';\n\nimport { UseTickets } from './api/api';\nimport { bubbleSortPrice, bubbleSortSpeed } from './Component/common/sorted';\nimport { sortedListTrue, sortedListFalse } from './Component/common/sortedList';\n\n\ntype SegmentsType = {\n  // Код города (iata)\n  origin: string\n  // Код города (iata)\n  destination: string\n  // Дата и время вылета туда\n  date: string\n  // Массив кодов (iata) городов с пересадками\n  stops: string[]\n  // Общее время перелёта в минутах\n  duration: number\n}\n\nexport type TicketsType = {\n  // Цена в рублях\n  price: number\n  // Код авиакомпании (iata)\n  carrier: string\n  // Массив перелётов.\n  // В тестовом задании это всегда поиск \"туда-обратно\" значит состоит из двух элементов\n  segments: Array<SegmentsType>\n}\n\nexport type StateType = {\n  tickets: Array<TicketsType> | undefined\n  ticketsPrev: Array<TicketsType> | undefined\n  ticketsStart: Array<TicketsType> | undefined\n  sorted: string | undefined\n  changesStateOption: number | undefined\n}\n\nexport const App = () => {\n  let changesStateOption:number\n  let [allTickets, setTicketsAll] = useState<StateType | undefined>({ tickets: [], ticketsPrev: [], ticketsStart: [], sorted: '', changesStateOption: 1 })\n\n  useEffect(() => {\n    UseTickets.getSearchId().then(data => {\n      setTicketsAll({ tickets: data.tickets, ticketsPrev: data.tickets, ticketsStart: data.tickets, sorted: '', changesStateOption: 1 })\n    })\n  }, [])\n\n\n  useEffect(() => {\n    setTicketsAll(() => {\n      if (allTickets?.sorted === 'chepest') {\n        return (\n          {\n            tickets: bubbleSortPrice(allTickets?.tickets),\n            ticketsPrev: allTickets?.ticketsPrev,\n            ticketsStart: bubbleSortPrice(allTickets?.ticketsStart),\n            sorted: 'chepest',\n            changesStateOption: allTickets.changesStateOption\n          }\n        )\n      } else if (allTickets?.sorted === 'overSpeed') {\n        return (\n          {\n            tickets: bubbleSortSpeed(allTickets?.tickets),\n            ticketsPrev: allTickets?.ticketsPrev,\n            ticketsStart: bubbleSortSpeed(allTickets?.ticketsStart),\n            sorted: 'chepest',\n            changesStateOption: allTickets.changesStateOption\n          }\n        )\n      } else {\n        return (\n          {\n            tickets: allTickets?.tickets,\n            ticketsPrev: allTickets?.ticketsPrev,\n            ticketsStart: allTickets?.ticketsStart,\n            sorted: '',\n            changesStateOption: allTickets?.changesStateOption\n          }\n        )\n      }\n    })\n  }, [allTickets?.changesStateOption])\n\n  const typeTickets = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let currentBox = e.currentTarget\n\n    setTicketsAll((prevState) => {\n      switch (currentBox.dataset.radio) {\n        case 'chepest':\n          console.log(allTickets?.sorted)\n          return (\n            {\n              tickets: bubbleSortPrice(allTickets?.tickets),\n              ticketsPrev: allTickets?.ticketsPrev,\n              ticketsStart: bubbleSortPrice(allTickets?.ticketsStart),\n              sorted: 'chepest',\n              changesStateOption: allTickets?.changesStateOption\n            }\n          )\n        case 'overSpeed':\n          return (\n            {\n              tickets: bubbleSortSpeed(allTickets?.tickets),\n              ticketsPrev: allTickets?.ticketsPrev,\n              ticketsStart: bubbleSortSpeed(allTickets?.ticketsStart),\n              sorted: 'overSpeed',\n              changesStateOption: allTickets?.changesStateOption\n            }\n          )\n      }\n    })\n  }\n\n  const SearchOption = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let currentBox = e.currentTarget\n    let currentBoxChecked = currentBox.checked\n    setTicketsAll((prevState) => {\n      switch (currentBox.name) {\n        case 'withoutTransplants':\n          return currentBoxChecked ? sortedListTrue(allTickets, 0, prevState) : sortedListFalse(allTickets, 0, prevState)\n        case 'oneTransplant':\n          return currentBoxChecked ? sortedListTrue(allTickets, 1, prevState) : sortedListFalse(allTickets, 1, prevState)\n        case 'twoTransplants':\n          return currentBoxChecked ? sortedListTrue(allTickets, 2, prevState) : sortedListFalse(allTickets, 2, prevState)\n        case 'threeTransplants':\n          return currentBoxChecked ? sortedListTrue(allTickets, 3, prevState) : sortedListFalse(allTickets, 3, prevState)\n        case 'allTransplants':\n          if (currentBoxChecked) {\n            return (\n              {\n                tickets: allTickets?.ticketsStart,\n                ticketsPrev: allTickets?.tickets,\n                ticketsStart: allTickets?.ticketsStart,\n                sorted: allTickets?.sorted,\n                changesStateOption: 10\n              }\n            )\n          } else {\n            return (\n              {\n                tickets: allTickets?.ticketsPrev,\n                ticketsPrev: allTickets?.tickets,\n                ticketsStart: allTickets?.ticketsStart,\n                sorted: allTickets?.sorted,\n                changesStateOption: 10\n              }\n            )\n\n          }\n        default:\n          return allTickets\n      }\n    })\n  }\n\n\n  if (!allTickets) return <div>Loading....</div>\n\n  return (\n    <div className=\"container app-wrap\">\n      <OptionTickets SearchOption={SearchOption} />\n      <TicketsList tickets={allTickets.tickets} typeTickets={typeTickets} />\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}